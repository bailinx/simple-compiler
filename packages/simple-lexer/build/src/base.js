"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TokenType = exports.DFAState = void 0;
var DFAState;
(function (DFAState) {
    DFAState[DFAState["Initial"] = 0] = "Initial";
    DFAState[DFAState["If"] = 1] = "If";
    DFAState[DFAState["Id_if1"] = 2] = "Id_if1";
    DFAState[DFAState["Id_if2"] = 3] = "Id_if2";
    DFAState[DFAState["Else"] = 4] = "Else";
    DFAState[DFAState["Id_else1"] = 5] = "Id_else1";
    DFAState[DFAState["Id_else2"] = 6] = "Id_else2";
    DFAState[DFAState["Id_else3"] = 7] = "Id_else3";
    DFAState[DFAState["Id_else4"] = 8] = "Id_else4";
    DFAState[DFAState["Int"] = 9] = "Int";
    DFAState[DFAState["Id_int1"] = 10] = "Id_int1";
    DFAState[DFAState["Id_int2"] = 11] = "Id_int2";
    DFAState[DFAState["Id_int3"] = 12] = "Id_int3";
    DFAState[DFAState["Id"] = 13] = "Id";
    DFAState[DFAState["GE"] = 14] = "GE";
    DFAState[DFAState["GT"] = 15] = "GT";
    DFAState[DFAState["Assignment"] = 16] = "Assignment";
    DFAState[DFAState["Plus"] = 17] = "Plus";
    DFAState[DFAState["Subtract"] = 18] = "Subtract";
    DFAState[DFAState["Multiply"] = 19] = "Multiply";
    DFAState[DFAState["Divide"] = 20] = "Divide";
    DFAState[DFAState["SemiColon"] = 21] = "SemiColon";
    DFAState[DFAState["LeftParen"] = 22] = "LeftParen";
    DFAState[DFAState["RightParen"] = 23] = "RightParen";
    DFAState[DFAState["IntLiteral"] = 24] = "IntLiteral";
})(DFAState = exports.DFAState || (exports.DFAState = {}));
var TokenType;
(function (TokenType) {
    TokenType[TokenType["Plus"] = 0] = "Plus";
    TokenType[TokenType["Subtract"] = 1] = "Subtract";
    TokenType[TokenType["Multiply"] = 2] = "Multiply";
    TokenType[TokenType["Divide"] = 3] = "Divide";
    TokenType[TokenType["GE"] = 4] = "GE";
    TokenType[TokenType["GT"] = 5] = "GT";
    TokenType[TokenType["EQ"] = 6] = "EQ";
    TokenType[TokenType["LE"] = 7] = "LE";
    TokenType[TokenType["LT"] = 8] = "LT";
    TokenType[TokenType["SemiColon"] = 9] = "SemiColon";
    TokenType[TokenType["LeftParen"] = 10] = "LeftParen";
    TokenType[TokenType["RightParen"] = 11] = "RightParen";
    TokenType[TokenType["Assignment"] = 12] = "Assignment";
    TokenType[TokenType["If"] = 13] = "If";
    TokenType[TokenType["Else"] = 14] = "Else";
    TokenType[TokenType["Int"] = 15] = "Int";
    TokenType[TokenType["Identifier"] = 16] = "Identifier";
    TokenType[TokenType["IntLiteral"] = 17] = "IntLiteral";
    TokenType[TokenType["StringLiteral"] = 18] = "StringLiteral";
})(TokenType = exports.TokenType || (exports.TokenType = {}));
